stages:
  - testing
  - formatting
  - deploy

test_light:
  stage: testing
  image: julia:latest
  script:
    - julia --project=@. -e "import Pkg; Pkg.test(; coverage = false)"
  except:
    - main

test_full:
  stage: testing
  image: julia:latest
  script:
    - julia --project=@. -e "import Pkg; Pkg.test(; coverage = true)"
    - julia --project=coverage -e 'import Pkg; Pkg.instantiate()'
    - julia --project=coverage coverage/coverage-summary.jl
  coverage: '/\(\d+.\d+\%\) covered/'
  only:
    - merge_requests
    - main

format:
  stage: formatting
  image: julia:latest
  script:
    - julia -e '@info "Verifying formatting"'
    - | 
      julia --eval '
      import Pkg
      Pkg.add("JuliaFormatter")
      using JuliaFormatter
      properly_formatted = format("./src"; verbose = true)

      if properly_formatted
        @info "Formatting verified"
      else 
        @info "Formatting failed - some files have not yet been formatted"
      end
      exit(properly_formatted ? 0 : 1)'   
  only:
    - merge_requests
    - main

pages:
  stage: deploy
  image: julia:latest
  script:
    - cd docs
    - julia --project=. -e 'using Pkg; Pkg.add("Documenter")'  # install Documenter
    - julia --project=. --color=yes make.jl  # make documentation
    - cd ..
    - mv docs/build public  # move to the directory picked up by Gitlab pages
  artifacts:
    paths:
      - public
  only:
    - merge_requests
    - main

   
